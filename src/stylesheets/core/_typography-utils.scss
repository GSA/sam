@function sam-typography-level(
  $font-size,
  $line-height: $font-size,
  $font-weight: 400,
  $font-family: null,
  $letter-spacing: null) {

  @return (
    font-size:        $font-size,
    line-height:      $line-height,
    font-weight:      $font-weight,
    font-family:      $font-family,
    letter-spacing:   $letter-spacing
  );
}

@function sam-typography-config(
  $font-family:   '"Source Sans Pro", "Helvetica Neue", "Helvetica", sans-serif',
  $heading-1:     sam-typography-level(38px, 42px, 700, null, -1px),
  $heading-2:     sam-typography-level(32px, 41px, 700, null, -.8px),
  $heading-3:     sam-typography-level(24px, 31px, 600),
  $heading-4:     sam-typography-level(18px, 25px, 700),
  $lead:          sam-typography-level(20px, 26px, 300, null, 0),
  $body:          sam-typography-level(16px, 24px, 400),
  $body-strong:   sam-typography-level(16px, 24px, 600),
  $small:         sam-typography-level(15px, 22px, 400)
) {

  // Declare an initial map with all of the levels.
  $config: (
    heading-1:     $heading-1,
    heading-2:     $heading-2,
    heading-3:     $heading-3,
    heading-4:     $heading-4,
    lead:          $lead,
    body:          $body,
    body-strong:   $body-strong,
    small:         $small
  );

  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.
  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.
  @each $key, $level in $config {
    @if map-get($level, font-family) == null {
      $new-level: map-merge($level, (font-family: $font-family));
      $config: map-merge($config, ($key: $new-level));
    }
  }

  // Add the base font family to the config.
  @return map-merge($config, (font-family: $font-family));
}

// Utility for fetching a nested value from a typography config.
@function _sam-get-type-value($config, $level, $name) {
  @return map-get(map-get($config, $level), $name);
}

// Gets the font size for a level inside a typography config.
@function sam-font-size($config, $level) {
  @return _sam-get-type-value($config, $level, font-size);
}

// Gets the line height for a level inside a typography config.
@function sam-line-height($config, $level) {
  @return _sam-get-type-value($config, $level, line-height);
}

// Gets the font weight for a level inside a typography config.
@function sam-font-weight($config, $level) {
  @return _sam-get-type-value($config, $level, font-weight);
}

// Gets the letter spacing for a level inside a typography config.
@function sam-letter-spacing($config, $level) {
  @return _sam-get-type-value($config, $level, letter-spacing);
}

// Gets the font-family from a typography config and removes the quotes around it.
@function sam-font-family($config, $level: null) {
  $font-family: map-get($config, font-family);

  @if $level != null {
    $font-family: _sam-get-type-value($config, $level, font-family);
  }

  @return if($font-family == null, $font-family, unquote($font-family));
}

// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to
// the individual properties if a value that isn't allowed in the shorthand is passed in.
@mixin sam-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {
  // If any of the values are set to `inherit`, we can't use the shorthand
  // so we fall back to passing in the individual properties.
  @if ($font-size == inherit or
       $font-weight == inherit or
       $line-height == inherit or
       $font-family == inherit or
       $font-size == null or
       $font-weight == null or
       $line-height == null or
       $font-family == null) {

    font-size: $font-size;
    font-weight: $font-weight;
    line-height: $line-height;
    font-family: $font-family;
  }
  @else {
    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note
    // that we need to use interpolation for `font-size/line-height` in order to prevent
    // Sass from dividing the two values.
    font: $font-weight #{$font-size}/#{$line-height} $font-family;
  }
}

// Converts a typography level into CSS styles.
@mixin sam-typography-level-to-styles($config, $level) {
  $font-size: sam-font-size($config, $level);
  $font-weight: sam-font-weight($config, $level);
  $line-height: sam-line-height($config, $level);
  $font-family: sam-font-family($config, $level);

  @include sam-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);
  letter-spacing: sam-letter-spacing($config, $level);
}
