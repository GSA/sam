"use strict";(self.webpackChunk_gsa_sam_sam_styles=self.webpackChunk_gsa_sam_sam_styles||[]).push([[6646],{"./sam-styles/packages/components/accordion/accordion.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Bordered:()=>Bordered,Multiselectable:()=>Multiselectable,__namedExportsOrder:()=>__namedExportsOrder,default:()=>accordion_stories});const accordion_stories={title:"Components/Accordion",argTypes:{class:{control:"text"},expanded:{control:"boolean"}}},Bordered=args=>{const container=document.createElement("div");container.className=`usa-accordion ${args.class||"usa-accordion--bordered"}`,container.innerHTML='<div class="usa-accordion ${args.class}"> <h2 class="usa-accordion__heading"> <button class="usa-accordion__button border-top-1px border-base-light" aria-expanded="false" aria-controls="b-a1"> Accordion Button </button> </h2> <div id="b-a1" class="usa-accordion__content"> <p>Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances.</p> </div> <h2 class="usa-accordion__heading"> <button class="usa-accordion__button" aria-expanded="true" aria-controls="b-a2"> Accordion Button </button> </h2> <div id="b-a2" class="usa-accordion__content"> <p>Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances.</p> </div> <h2 class="usa-accordion__heading"> <button class="usa-accordion__button" aria-expanded="false" aria-controls="b-a3"> Accordion Button </button> </h2> <div id="b-a3" class="usa-accordion__content"> <p>Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances.</p> </div> <h2 class="usa-accordion__heading"> <button class="usa-accordion__button" aria-expanded="false" aria-controls="b-a4"> Accordion Button </button> </h2> <div id="b-a4" class="usa-accordion__content"> <p>Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances.</p> </div> <h2 class="usa-accordion__heading"> <button class="usa-accordion__button" aria-expanded="false" aria-controls="b-a5"> Accordion Button </button> </h2> <div id="b-a5" class="usa-accordion__content"> <p>Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances.</p> </div> </div>';const accordionButtons=container.querySelectorAll(".usa-accordion__button"),accordionContents=container.querySelectorAll(".usa-accordion__content");accordionButtons.length>0&&accordionContents.length>0&&(accordionButtons[0].setAttribute("aria-expanded","true"),accordionContents[0].style.display="block");for(let i=1;i<accordionButtons.length;i++)accordionButtons[i].setAttribute("aria-expanded","false"),accordionContents[i].style.display="none";const script=document.createElement("script");return script.type="module",script.textContent="\n    const initAccordion = () => {\n        const accordionButtons = document.querySelectorAll('.usa-accordion__button');\n        accordionButtons.forEach(button => {\n            button.addEventListener('click', function() {\n                const isExpanded = this.getAttribute('aria-expanded') === 'true';\n                // Toggle the current section\n                this.setAttribute('aria-expanded', !isExpanded);\n                const contentPanelId = this.getAttribute('aria-controls');\n                const contentPanel = document.getElementById(contentPanelId);\n                contentPanel.style.display = isExpanded ? 'none' : 'block';\n\n                // Collapse other sections\n                accordionButtons.forEach(otherButton => {\n                    if (otherButton !== this) {\n                        otherButton.setAttribute('aria-expanded', 'false');\n                        const otherContentPanel = document.getElementById(otherButton.getAttribute('aria-controls'));\n                        otherContentPanel.style.display = 'none';\n                    }\n                });\n            });\n        });\n    };\n    initAccordion();\n    ",container.appendChild(script),container},Multiselectable=()=>{const container=document.createElement("div");container.innerHTML='<div class="usa-accordion usa-accordion--bordered" aria-multiselectable="true"> <h2 class="usa-accordion__heading"> <button class="usa-accordion__button border-top-1px border-base-light" aria-expanded="false" aria-controls="b-a1"> Accordion Button </button> </h2> <div id="b-a1" class="usa-accordion__content"> <p>Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances.</p> </div> <h2 class="usa-accordion__heading"> <button class="usa-accordion__button" aria-expanded="true" aria-controls="b-a2"> Accordion Button </button> </h2> <div id="b-a2" class="usa-accordion__content"> <p>Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances.</p> </div> <h2 class="usa-accordion__heading"> <button class="usa-accordion__button" aria-expanded="true" aria-controls="b-a3"> Accordion Button </button> </h2> <div id="b-a3" class="usa-accordion__content"> <p>Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances.</p> </div> <h2 class="usa-accordion__heading"> <button class="usa-accordion__button" aria-expanded="true" aria-controls="b-a4"> Accordion Button </button> </h2> <div id="b-a4" class="usa-accordion__content"> <p>Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances.</p> </div> <h2 class="usa-accordion__heading"> <button class="usa-accordion__button" aria-expanded="true" aria-controls="b-a5"> Accordion Button </button> </h2> <div id="b-a5" class="usa-accordion__content"> <p>Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances.</p> </div> </div>',container.querySelectorAll(".usa-accordion__button").forEach(((button,index)=>{button.setAttribute("aria-expanded",1===index?"true":"false")})),container.querySelectorAll(".usa-accordion__content").forEach(((content,index)=>{content.style.display=1===index?"block":"none"}));const script=document.createElement("script");return script.type="module",script.textContent="\n        const initAccordion = () => {\n            const accordionButtons = document.querySelectorAll('.usa-accordion__button');\n            accordionButtons.forEach(button => {\n                button.addEventListener('click', function() {\n                    const isExpanded = this.getAttribute('aria-expanded') === 'true';\n                    this.setAttribute('aria-expanded', !isExpanded);\n                    const contentPanelId = this.getAttribute('aria-controls');\n                    const contentPanel = document.getElementById(contentPanelId);\n                    contentPanel.style.display = isExpanded ? 'none' : 'block';\n                });\n            });\n        };\n        initAccordion();\n    ",container.appendChild(script),container};Bordered.parameters={...Bordered.parameters,docs:{...Bordered.parameters?.docs,source:{originalSource:"args => {\n  const container = document.createElement('div');\n  container.className = `usa-accordion ${args.class || 'usa-accordion--bordered'}`;\n  container.innerHTML = BorderedAccordion;\n  const accordionButtons = container.querySelectorAll('.usa-accordion__button');\n  const accordionContents = container.querySelectorAll('.usa-accordion__content');\n  if (accordionButtons.length > 0 && accordionContents.length > 0) {\n    accordionButtons[0].setAttribute('aria-expanded', 'true');\n    accordionContents[0].style.display = 'block';\n  }\n  for (let i = 1; i < accordionButtons.length; i++) {\n    accordionButtons[i].setAttribute('aria-expanded', 'false');\n    accordionContents[i].style.display = 'none';\n  }\n  const script = document.createElement('script');\n  script.type = 'module';\n  script.textContent = `\n    const initAccordion = () => {\n        const accordionButtons = document.querySelectorAll('.usa-accordion__button');\n        accordionButtons.forEach(button => {\n            button.addEventListener('click', function() {\n                const isExpanded = this.getAttribute('aria-expanded') === 'true';\n                // Toggle the current section\n                this.setAttribute('aria-expanded', !isExpanded);\n                const contentPanelId = this.getAttribute('aria-controls');\n                const contentPanel = document.getElementById(contentPanelId);\n                contentPanel.style.display = isExpanded ? 'none' : 'block';\n\n                // Collapse other sections\n                accordionButtons.forEach(otherButton => {\n                    if (otherButton !== this) {\n                        otherButton.setAttribute('aria-expanded', 'false');\n                        const otherContentPanel = document.getElementById(otherButton.getAttribute('aria-controls'));\n                        otherContentPanel.style.display = 'none';\n                    }\n                });\n            });\n        });\n    };\n    initAccordion();\n    `;\n  container.appendChild(script);\n  return container;\n}",...Bordered.parameters?.docs?.source}}},Multiselectable.parameters={...Multiselectable.parameters,docs:{...Multiselectable.parameters?.docs,source:{originalSource:"() => {\n  const container = document.createElement('div');\n  container.innerHTML = MultiSelectableAccordion;\n  container.querySelectorAll('.usa-accordion__button').forEach((button, index) => {\n    button.setAttribute('aria-expanded', index === 1 ? 'true' : 'false');\n  });\n  container.querySelectorAll('.usa-accordion__content').forEach((content, index) => {\n    content.style.display = index === 1 ? 'block' : 'none';\n  });\n  const script = document.createElement('script');\n  script.type = 'module';\n  script.textContent = `\n        const initAccordion = () => {\n            const accordionButtons = document.querySelectorAll('.usa-accordion__button');\n            accordionButtons.forEach(button => {\n                button.addEventListener('click', function() {\n                    const isExpanded = this.getAttribute('aria-expanded') === 'true';\n                    this.setAttribute('aria-expanded', !isExpanded);\n                    const contentPanelId = this.getAttribute('aria-controls');\n                    const contentPanel = document.getElementById(contentPanelId);\n                    contentPanel.style.display = isExpanded ? 'none' : 'block';\n                });\n            });\n        };\n        initAccordion();\n    `;\n  container.appendChild(script);\n  return container;\n}",...Multiselectable.parameters?.docs?.source}}};const __namedExportsOrder=["Bordered","Multiselectable"]}}]);